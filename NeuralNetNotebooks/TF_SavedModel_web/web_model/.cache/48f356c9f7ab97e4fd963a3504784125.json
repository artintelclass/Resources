{"dependencies":[{"name":"/Users/aaronsherwood/Documents/Classes/artintelclass/Resources/NeuralNetNotebooks/web_model/package.json","includedInParent":true,"mtime":1524325734000},{"name":"/Users/aaronsherwood/Documents/Classes/artintelclass/Resources/NeuralNetNotebooks/web_model/node_modules/@tensorflow/tfjs-converter/package.json","includedInParent":true,"mtime":1524163232000}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getParamValue(paramName, node, tensorMap) {\n    var param = node.params[paramName];\n    if (param && param.inputIndex !== undefined) {\n        if (param.type === 'tensor') {\n            return getTensor(node.inputNames[param.inputIndex], tensorMap);\n        }\n        if (param.type === 'tensors') {\n            var inputs = param.inputIndex === 0 ?\n                node.inputNames.slice(param.inputIndex, -param.inputParamLength) :\n                node.inputNames.splice(param.inputIndex);\n            return inputs.map(function (name) { return getTensor(name, tensorMap); });\n        }\n        var data = Array.prototype.slice.call(getTensor(node.inputNames.slice(param.inputIndex)[0], tensorMap)\n            .dataSync());\n        return param.type === 'number' ? data[0] : data;\n    }\n    return param && param.value;\n}\nexports.getParamValue = getParamValue;\nfunction getTensor(name, tensorMap) {\n    var index = name.lastIndexOf(':');\n    if (index === -1) {\n        return tensorMap[name] ? tensorMap[name][0] : undefined;\n    }\n    else {\n        var nodeName = name.substring(0, index);\n        return tensorMap[nodeName] ?\n            tensorMap[nodeName][Number(name.substring(index + 1))] :\n            undefined;\n    }\n}\nexports.getTensor = getTensor;\nfunction split(arr, size) {\n    var res = [];\n    for (var i = 0; i < arr.length; i += size) {\n        res.push(arr.slice(i, i + size));\n    }\n    return res;\n}\nexports.split = split;\n//# sourceMappingURL=utils.js.map","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getParamValue(paramName, node, tensorMap) {\n    var param = node.params[paramName];\n    if (param && param.inputIndex !== undefined) {\n        if (param.type === 'tensor') {\n            return getTensor(node.inputNames[param.inputIndex], tensorMap);\n        }\n        if (param.type === 'tensors') {\n            var inputs = param.inputIndex === 0 ?\n                node.inputNames.slice(param.inputIndex, -param.inputParamLength) :\n                node.inputNames.splice(param.inputIndex);\n            return inputs.map(function (name) { return getTensor(name, tensorMap); });\n        }\n        var data = Array.prototype.slice.call(getTensor(node.inputNames.slice(param.inputIndex)[0], tensorMap)\n            .dataSync());\n        return param.type === 'number' ? data[0] : data;\n    }\n    return param && param.value;\n}\nexports.getParamValue = getParamValue;\nfunction getTensor(name, tensorMap) {\n    var index = name.lastIndexOf(':');\n    if (index === -1) {\n        return tensorMap[name] ? tensorMap[name][0] : undefined;\n    }\n    else {\n        var nodeName = name.substring(0, index);\n        return tensorMap[nodeName] ?\n            tensorMap[nodeName][Number(name.substring(index + 1))] :\n            undefined;\n    }\n}\nexports.getTensor = getTensor;\nfunction split(arr, size) {\n    var res = [];\n    for (var i = 0; i < arr.length; i += size) {\n        res.push(arr.slice(i, i + size));\n    }\n    return res;\n}\nexports.split = split;\n//# sourceMappingURL=utils.js.map"},"lineCount":43}},"hash":"51efa82caba40c227161e39054e5cfe7","cacheData":{"env":{}}}