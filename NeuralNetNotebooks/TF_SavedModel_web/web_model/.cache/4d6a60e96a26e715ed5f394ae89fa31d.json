{"dependencies":[{"name":"/Users/aaronsherwood/Documents/Classes/artintelclass/Resources/NeuralNetNotebooks/web_model/package.json","includedInParent":true,"mtime":1524325734000},{"name":"/Users/aaronsherwood/Documents/Classes/artintelclass/Resources/NeuralNetNotebooks/web_model/node_modules/@tensorflow/tfjs-converter/package.json","includedInParent":true,"mtime":1524163232000},{"name":"@tensorflow/tfjs-core","loc":{"line":31,"column":26}},{"name":"../operations/executors/utils","loc":{"line":32,"column":22}},{"name":"../operations/index","loc":{"line":33,"column":25}}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar utils_1 = require(\"../operations/executors/utils\");\nvar operations = require(\"../operations/index\");\nvar GraphExecutor = (function () {\n    function GraphExecutor(graph) {\n        this.graph = graph;\n        this.compiledOrder = [];\n        this._weightMap = {};\n        this.placeholders = graph.placeholders.map(function (node) { return node.name; });\n        this.outputs = graph.outputs.map(function (node) { return node.name; });\n        this.compile();\n    }\n    Object.defineProperty(GraphExecutor.prototype, \"weightMap\", {\n        get: function () {\n            return this._weightMap;\n        },\n        set: function (weightMap) {\n            this._weightMap = weightMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphExecutor.prototype, \"inputNodes\", {\n        get: function () {\n            return this.placeholders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphExecutor.prototype, \"outputNodes\", {\n        get: function () {\n            return this.outputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphExecutor.prototype.compile = function () {\n        var stack = __spread(this.graph.inputs);\n        var visited = {};\n        while (stack.length > 0) {\n            var node = stack.pop();\n            visited[node.name] = true;\n            this.compiledOrder.push(node);\n            node.children.forEach(function (childNode) {\n                if (childNode.inputNames.every(function (name) { return visited[name]; })) {\n                    stack.push(childNode);\n                }\n            });\n        }\n    };\n    GraphExecutor.prototype.execute = function (inputs, outputs) {\n        var _this = this;\n        this.checkInput(inputs);\n        var result = tfjs_core_1.tidy(function () {\n            var tensors = _this.compiledOrder.reduce(function (map, node) {\n                map[node.name] = operations.executeOp(node, map);\n                return map;\n            }, __assign({}, _this.weightMap, inputs));\n            if (outputs && !(outputs instanceof Array)) {\n                outputs = [outputs];\n            }\n            var requestedOutputs = (outputs || _this.graph.outputs.map(function (node) { return node.name; }));\n            return requestedOutputs.reduce(function (map, name) {\n                map[name] = utils_1.getTensor(name, tensors);\n                return map;\n            }, {});\n        });\n        return result;\n    };\n    GraphExecutor.prototype.dispose = function () {\n        var _this = this;\n        Object.keys(this.weightMap)\n            .forEach(function (key) { return _this.weightMap[key].forEach(function (tensor) { return tensor.dispose(); }); });\n    };\n    GraphExecutor.prototype.checkInput = function (inputs) {\n        var _this = this;\n        var inputKeys = Object.keys(inputs);\n        var missing = [];\n        var extra = [];\n        this.placeholders.forEach(function (name) {\n            if (inputKeys.indexOf(name) === -1)\n                missing.push(name);\n        });\n        inputKeys.forEach(function (name) {\n            if (_this.placeholders.indexOf(name) === -1)\n                extra.push(name);\n        });\n        if (missing.length > 0) {\n            throw new Error(\"Missing input placeholders: \" + missing);\n        }\n        if (extra.length > 0) {\n            throw new Error(\"Extra input tensors: \" + extra);\n        }\n    };\n    return GraphExecutor;\n}());\nexports.GraphExecutor = GraphExecutor;\n//# sourceMappingURL=graph_executor.js.map","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar utils_1 = require(\"../operations/executors/utils\");\nvar operations = require(\"../operations/index\");\nvar GraphExecutor = (function () {\n    function GraphExecutor(graph) {\n        this.graph = graph;\n        this.compiledOrder = [];\n        this._weightMap = {};\n        this.placeholders = graph.placeholders.map(function (node) { return node.name; });\n        this.outputs = graph.outputs.map(function (node) { return node.name; });\n        this.compile();\n    }\n    Object.defineProperty(GraphExecutor.prototype, \"weightMap\", {\n        get: function () {\n            return this._weightMap;\n        },\n        set: function (weightMap) {\n            this._weightMap = weightMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphExecutor.prototype, \"inputNodes\", {\n        get: function () {\n            return this.placeholders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphExecutor.prototype, \"outputNodes\", {\n        get: function () {\n            return this.outputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphExecutor.prototype.compile = function () {\n        var stack = __spread(this.graph.inputs);\n        var visited = {};\n        while (stack.length > 0) {\n            var node = stack.pop();\n            visited[node.name] = true;\n            this.compiledOrder.push(node);\n            node.children.forEach(function (childNode) {\n                if (childNode.inputNames.every(function (name) { return visited[name]; })) {\n                    stack.push(childNode);\n                }\n            });\n        }\n    };\n    GraphExecutor.prototype.execute = function (inputs, outputs) {\n        var _this = this;\n        this.checkInput(inputs);\n        var result = tfjs_core_1.tidy(function () {\n            var tensors = _this.compiledOrder.reduce(function (map, node) {\n                map[node.name] = operations.executeOp(node, map);\n                return map;\n            }, __assign({}, _this.weightMap, inputs));\n            if (outputs && !(outputs instanceof Array)) {\n                outputs = [outputs];\n            }\n            var requestedOutputs = (outputs || _this.graph.outputs.map(function (node) { return node.name; }));\n            return requestedOutputs.reduce(function (map, name) {\n                map[name] = utils_1.getTensor(name, tensors);\n                return map;\n            }, {});\n        });\n        return result;\n    };\n    GraphExecutor.prototype.dispose = function () {\n        var _this = this;\n        Object.keys(this.weightMap)\n            .forEach(function (key) { return _this.weightMap[key].forEach(function (tensor) { return tensor.dispose(); }); });\n    };\n    GraphExecutor.prototype.checkInput = function (inputs) {\n        var _this = this;\n        var inputKeys = Object.keys(inputs);\n        var missing = [];\n        var extra = [];\n        this.placeholders.forEach(function (name) {\n            if (inputKeys.indexOf(name) === -1)\n                missing.push(name);\n        });\n        inputKeys.forEach(function (name) {\n            if (_this.placeholders.indexOf(name) === -1)\n                extra.push(name);\n        });\n        if (missing.length > 0) {\n            throw new Error(\"Missing input placeholders: \" + missing);\n        }\n        if (extra.length > 0) {\n            throw new Error(\"Extra input tensors: \" + extra);\n        }\n    };\n    return GraphExecutor;\n}());\nexports.GraphExecutor = GraphExecutor;\n//# sourceMappingURL=graph_executor.js.map"},"lineCount":128}},"hash":"7c3c62fc85141c7f09922296bd2b17fe","cacheData":{"env":{}}}