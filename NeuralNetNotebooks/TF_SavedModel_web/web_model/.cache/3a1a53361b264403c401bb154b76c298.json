{"dependencies":[{"name":"/Users/aaronsherwood/Documents/Classes/artintelclass/Resources/NeuralNetNotebooks/web_model/package.json","includedInParent":true,"mtime":1524325734000},{"name":"/Users/aaronsherwood/Documents/Classes/artintelclass/Resources/NeuralNetNotebooks/web_model/node_modules/@tensorflow/tfjs-converter/package.json","includedInParent":true,"mtime":1524163232000},{"name":"../data/index","loc":{"line":23,"column":22}},{"name":"./op_list/arithmetic.json","loc":{"line":24,"column":25}},{"name":"./op_list/basic_math.json","loc":{"line":25,"column":24}},{"name":"./op_list/convolution.json","loc":{"line":26,"column":26}},{"name":"./op_list/creation.json","loc":{"line":27,"column":23}},{"name":"./op_list/graph.json","loc":{"line":28,"column":20}},{"name":"./op_list/logical.json","loc":{"line":29,"column":22}},{"name":"./op_list/matrices.json","loc":{"line":30,"column":23}},{"name":"./op_list/normalization.json","loc":{"line":31,"column":28}},{"name":"./op_list/reduction.json","loc":{"line":32,"column":24}},{"name":"./op_list/slice_join.json","loc":{"line":33,"column":24}},{"name":"./op_list/transformation.json","loc":{"line":34,"column":29}}],"generated":{"js":"\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"../data/index\");\nvar arithmetic = require(\"./op_list/arithmetic.json\");\nvar basicMath = require(\"./op_list/basic_math.json\");\nvar convolution = require(\"./op_list/convolution.json\");\nvar creation = require(\"./op_list/creation.json\");\nvar graph = require(\"./op_list/graph.json\");\nvar logical = require(\"./op_list/logical.json\");\nvar matrices = require(\"./op_list/matrices.json\");\nvar normalization = require(\"./op_list/normalization.json\");\nvar reduction = require(\"./op_list/reduction.json\");\nvar sliceJoin = require(\"./op_list/slice_join.json\");\nvar transformation = require(\"./op_list/transformation.json\");\nvar CONTROL_FLOW_OPS = ['Switch', 'Merge', 'Enter', 'Exit', 'Next'];\nvar OperationMapper = (function () {\n    function OperationMapper() {\n        var mappersJson = __spread(arithmetic, basicMath, convolution, creation, logical, graph, matrices, normalization, reduction, sliceJoin, transformation);\n        this.opMappers = mappersJson.reduce(function (map, mapper) {\n            map[mapper.tfOpName] = mapper;\n            return map;\n        }, {});\n    }\n    Object.defineProperty(OperationMapper, \"Instance\", {\n        get: function () {\n            return this._instance || (this._instance = new this());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OperationMapper.prototype.isControlFlow = function (node) {\n        return CONTROL_FLOW_OPS.some(function (op) { return op === node.op; });\n    };\n    OperationMapper.prototype.transformGraph = function (graph) {\n        var _this = this;\n        var tfNodes = graph.node;\n        var withControlFlow = false;\n        var placeholders = [];\n        var nodes = tfNodes.reduce(function (map, node) {\n            map[node.name] = _this.mapNode(node);\n            if (_this.isControlFlow(node))\n                withControlFlow = true;\n            if (node.op === 'Placeholder')\n                placeholders.push(map[node.name]);\n            return map;\n        }, {});\n        var inputs = [];\n        var outputs = [];\n        Object.keys(nodes).forEach(function (key) {\n            var node = nodes[key];\n            node.inputNames.forEach(function (name) {\n                node.inputs.push(nodes[name]);\n                nodes[name].children.push(node);\n            });\n            if (node.inputs.length === 0)\n                inputs.push(node);\n        });\n        Object.keys(nodes).forEach(function (key) {\n            var node = nodes[key];\n            if (node.children.length === 0)\n                outputs.push(node);\n        });\n        return { nodes: nodes, inputs: inputs, outputs: outputs, placeholders: placeholders, withControlFlow: withControlFlow };\n    };\n    OperationMapper.prototype.mapNode = function (node) {\n        var _this = this;\n        var mapper = this.opMappers[node.op];\n        if (mapper === undefined) {\n            throw new Error('Tensorflow Op is not supported: ' + node.op);\n        }\n        var newNode = {\n            name: node.name,\n            op: mapper.dlOpName,\n            category: mapper.category,\n            inputNames: node.input || [],\n            inputs: [],\n            children: [],\n            params: {}\n        };\n        if (!!mapper.params) {\n            newNode.params = mapper.params.reduce(function (map, param) {\n                var inputIndex = param.tfInputIndex;\n                var inputParamLength = param.tfInputParamLength;\n                var type = param.type;\n                var value = undefined;\n                if (inputIndex === undefined) {\n                    switch (param.type) {\n                        case 'string':\n                            value = _this.getStringParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'number':\n                            value = _this.getNumberParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'number[]':\n                            value = _this.getNumericArrayParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'bool':\n                            value = _this.getBoolParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'shape':\n                            value = _this.getTensorShapeParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'dtype':\n                            value = _this.getDtypeParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'tensor':\n                        case 'tensors':\n                            break;\n                        default:\n                            throw new Error(\"Unsupported param type: \" + param.type + \" for op: \" + node.op);\n                    }\n                }\n                map[param.dlParamName] = { value: value, inputIndex: inputIndex, type: type, inputParamLength: inputParamLength };\n                return map;\n            }, {});\n        }\n        return newNode;\n    };\n    OperationMapper.prototype.getStringParam = function (attrs, name, def, keepCase) {\n        if (keepCase === void 0) { keepCase = false; }\n        var param = attrs[name];\n        if (param !== undefined) {\n            var value = String.fromCharCode.apply(null, param.s);\n            return keepCase ? value : value.toLowerCase();\n        }\n        return def;\n    };\n    OperationMapper.prototype.getBoolParam = function (attrs, name, def) {\n        var param = attrs[name];\n        return param ? param.b : def;\n    };\n    OperationMapper.prototype.getNumberParam = function (attrs, name, def) {\n        var param = attrs[name];\n        return (param ? ((param.f !== undefined) ? param.f : param.i) : def);\n    };\n    OperationMapper.prototype.getDtypeParam = function (attrs, name, def) {\n        var param = attrs[name];\n        if (param && param.type) {\n            switch (param.type) {\n                case index_1.tensorflow.DataType.DT_FLOAT:\n                    return 'float32';\n                case index_1.tensorflow.DataType.DT_INT32:\n                    return 'int32';\n                case index_1.tensorflow.DataType.DT_BOOL:\n                    return 'bool';\n                default:\n                    return def;\n            }\n        }\n        return def;\n    };\n    OperationMapper.prototype.getTensorShapeParam = function (attrs, name, def) {\n        var param = attrs[name];\n        if (param && param.shape) {\n            return param.shape.dim.map(function (dim) { return dim.size; });\n        }\n        return def;\n    };\n    OperationMapper.prototype.getNumericArrayParam = function (attrs, name, def) {\n        var param = attrs[name];\n        if (param) {\n            return (param.list.f.length ? param.list.f : param.list.i);\n        }\n        return def;\n    };\n    return OperationMapper;\n}());\nexports.OperationMapper = OperationMapper;\n//# sourceMappingURL=operation_mapper.js.map","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js":"\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"../data/index\");\nvar arithmetic = require(\"./op_list/arithmetic.json\");\nvar basicMath = require(\"./op_list/basic_math.json\");\nvar convolution = require(\"./op_list/convolution.json\");\nvar creation = require(\"./op_list/creation.json\");\nvar graph = require(\"./op_list/graph.json\");\nvar logical = require(\"./op_list/logical.json\");\nvar matrices = require(\"./op_list/matrices.json\");\nvar normalization = require(\"./op_list/normalization.json\");\nvar reduction = require(\"./op_list/reduction.json\");\nvar sliceJoin = require(\"./op_list/slice_join.json\");\nvar transformation = require(\"./op_list/transformation.json\");\nvar CONTROL_FLOW_OPS = ['Switch', 'Merge', 'Enter', 'Exit', 'Next'];\nvar OperationMapper = (function () {\n    function OperationMapper() {\n        var mappersJson = __spread(arithmetic, basicMath, convolution, creation, logical, graph, matrices, normalization, reduction, sliceJoin, transformation);\n        this.opMappers = mappersJson.reduce(function (map, mapper) {\n            map[mapper.tfOpName] = mapper;\n            return map;\n        }, {});\n    }\n    Object.defineProperty(OperationMapper, \"Instance\", {\n        get: function () {\n            return this._instance || (this._instance = new this());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OperationMapper.prototype.isControlFlow = function (node) {\n        return CONTROL_FLOW_OPS.some(function (op) { return op === node.op; });\n    };\n    OperationMapper.prototype.transformGraph = function (graph) {\n        var _this = this;\n        var tfNodes = graph.node;\n        var withControlFlow = false;\n        var placeholders = [];\n        var nodes = tfNodes.reduce(function (map, node) {\n            map[node.name] = _this.mapNode(node);\n            if (_this.isControlFlow(node))\n                withControlFlow = true;\n            if (node.op === 'Placeholder')\n                placeholders.push(map[node.name]);\n            return map;\n        }, {});\n        var inputs = [];\n        var outputs = [];\n        Object.keys(nodes).forEach(function (key) {\n            var node = nodes[key];\n            node.inputNames.forEach(function (name) {\n                node.inputs.push(nodes[name]);\n                nodes[name].children.push(node);\n            });\n            if (node.inputs.length === 0)\n                inputs.push(node);\n        });\n        Object.keys(nodes).forEach(function (key) {\n            var node = nodes[key];\n            if (node.children.length === 0)\n                outputs.push(node);\n        });\n        return { nodes: nodes, inputs: inputs, outputs: outputs, placeholders: placeholders, withControlFlow: withControlFlow };\n    };\n    OperationMapper.prototype.mapNode = function (node) {\n        var _this = this;\n        var mapper = this.opMappers[node.op];\n        if (mapper === undefined) {\n            throw new Error('Tensorflow Op is not supported: ' + node.op);\n        }\n        var newNode = {\n            name: node.name,\n            op: mapper.dlOpName,\n            category: mapper.category,\n            inputNames: node.input || [],\n            inputs: [],\n            children: [],\n            params: {}\n        };\n        if (!!mapper.params) {\n            newNode.params = mapper.params.reduce(function (map, param) {\n                var inputIndex = param.tfInputIndex;\n                var inputParamLength = param.tfInputParamLength;\n                var type = param.type;\n                var value = undefined;\n                if (inputIndex === undefined) {\n                    switch (param.type) {\n                        case 'string':\n                            value = _this.getStringParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'number':\n                            value = _this.getNumberParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'number[]':\n                            value = _this.getNumericArrayParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'bool':\n                            value = _this.getBoolParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'shape':\n                            value = _this.getTensorShapeParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'dtype':\n                            value = _this.getDtypeParam(node.attr, param.tfParamName, param.defaultValue);\n                            break;\n                        case 'tensor':\n                        case 'tensors':\n                            break;\n                        default:\n                            throw new Error(\"Unsupported param type: \" + param.type + \" for op: \" + node.op);\n                    }\n                }\n                map[param.dlParamName] = { value: value, inputIndex: inputIndex, type: type, inputParamLength: inputParamLength };\n                return map;\n            }, {});\n        }\n        return newNode;\n    };\n    OperationMapper.prototype.getStringParam = function (attrs, name, def, keepCase) {\n        if (keepCase === void 0) { keepCase = false; }\n        var param = attrs[name];\n        if (param !== undefined) {\n            var value = String.fromCharCode.apply(null, param.s);\n            return keepCase ? value : value.toLowerCase();\n        }\n        return def;\n    };\n    OperationMapper.prototype.getBoolParam = function (attrs, name, def) {\n        var param = attrs[name];\n        return param ? param.b : def;\n    };\n    OperationMapper.prototype.getNumberParam = function (attrs, name, def) {\n        var param = attrs[name];\n        return (param ? ((param.f !== undefined) ? param.f : param.i) : def);\n    };\n    OperationMapper.prototype.getDtypeParam = function (attrs, name, def) {\n        var param = attrs[name];\n        if (param && param.type) {\n            switch (param.type) {\n                case index_1.tensorflow.DataType.DT_FLOAT:\n                    return 'float32';\n                case index_1.tensorflow.DataType.DT_INT32:\n                    return 'int32';\n                case index_1.tensorflow.DataType.DT_BOOL:\n                    return 'bool';\n                default:\n                    return def;\n            }\n        }\n        return def;\n    };\n    OperationMapper.prototype.getTensorShapeParam = function (attrs, name, def) {\n        var param = attrs[name];\n        if (param && param.shape) {\n            return param.shape.dim.map(function (dim) { return dim.size; });\n        }\n        return def;\n    };\n    OperationMapper.prototype.getNumericArrayParam = function (attrs, name, def) {\n        var param = attrs[name];\n        if (param) {\n            return (param.list.f.length ? param.list.f : param.list.i);\n        }\n        return def;\n    };\n    return OperationMapper;\n}());\nexports.OperationMapper = OperationMapper;\n//# sourceMappingURL=operation_mapper.js.map"},"lineCount":189}},"hash":"ebdfbbb12c261c4510258376072b9104","cacheData":{"env":{}}}