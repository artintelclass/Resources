{"dependencies":[{"name":"/Users/aaronsherwood/Documents/Classes/artintelclass/Resources/NeuralNetNotebooks/web_model/package.json","includedInParent":true,"mtime":1524325734000},{"name":"/Users/aaronsherwood/Documents/Classes/artintelclass/Resources/NeuralNetNotebooks/web_model/node_modules/@tensorflow/tfjs-converter/package.json","includedInParent":true,"mtime":1524163232000},{"name":"@tensorflow/tfjs-core","loc":{"line":3,"column":18}},{"name":"./utils","loc":{"line":4,"column":22}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar utils_1 = require(\"./utils\");\nexports.executeOp = function (node, tensorMap) {\n    switch (node.op) {\n        case 'abs':\n            return [tfc.abs(utils_1.getParamValue('x', node, tensorMap))];\n        case 'acos':\n            return [tfc.acos(utils_1.getParamValue('x', node, tensorMap))];\n        case 'asin':\n            return [tfc.asin(utils_1.getParamValue('x', node, tensorMap))];\n        case 'atan':\n            return [tfc.atan(utils_1.getParamValue('x', node, tensorMap))];\n        case 'ceil':\n            return [tfc.ceil(utils_1.getParamValue('x', node, tensorMap))];\n        case 'cos':\n            return [tfc.cos(utils_1.getParamValue('x', node, tensorMap))];\n        case 'cosh':\n            return [tfc.cosh(utils_1.getParamValue('x', node, tensorMap))];\n        case 'elu':\n            return [tfc.elu(utils_1.getParamValue('x', node, tensorMap))];\n        case 'exp':\n            return [tfc.exp(utils_1.getParamValue('x', node, tensorMap))];\n        case 'floor':\n            return [tfc.floor(utils_1.getParamValue('x', node, tensorMap))];\n        case 'log':\n            return [tfc.log(utils_1.getParamValue('x', node, tensorMap))];\n        case 'relu':\n            return [tfc.relu(utils_1.getParamValue('x', node, tensorMap))];\n        case 'selu':\n            return [tfc.selu(utils_1.getParamValue('x', node, tensorMap))];\n        case 'sigmoid':\n            return [tfc.sigmoid(utils_1.getParamValue('x', node, tensorMap))];\n        case 'sin':\n            return [tfc.sin(utils_1.getParamValue('x', node, tensorMap))];\n        case 'sinh': {\n            return [tfc.sinh(utils_1.getParamValue('x', node, tensorMap))];\n        }\n        case 'sqrt': {\n            return [tfc.sqrt(utils_1.getParamValue('x', node, tensorMap))];\n        }\n        case 'square': {\n            return [tfc.square(utils_1.getParamValue('x', node, tensorMap))];\n        }\n        case 'tanh': {\n            return [tfc.tanh(utils_1.getParamValue('x', node, tensorMap))];\n        }\n        case 'tan':\n            return [tfc.tan(utils_1.getParamValue('x', node, tensorMap))];\n        case 'clipByValue':\n            return [tfc.clipByValue(utils_1.getParamValue('x', node, tensorMap), utils_1.getParamValue('clipValueMin', node, tensorMap), utils_1.getParamValue('clipValueMax', node, tensorMap))];\n        case 'rsqrt':\n            return [tfc.div(tfc.scalar(1.0, 'float32'), tfc.sqrt(utils_1.getTensor(node.inputNames[0], tensorMap)))];\n        default:\n            throw TypeError(\"Node type \" + node.op + \" is not implemented\");\n    }\n};\nexports.CATEGORY = 'basic_math';\n//# sourceMappingURL=basic_math_executor.js.map","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar utils_1 = require(\"./utils\");\nexports.executeOp = function (node, tensorMap) {\n    switch (node.op) {\n        case 'abs':\n            return [tfc.abs(utils_1.getParamValue('x', node, tensorMap))];\n        case 'acos':\n            return [tfc.acos(utils_1.getParamValue('x', node, tensorMap))];\n        case 'asin':\n            return [tfc.asin(utils_1.getParamValue('x', node, tensorMap))];\n        case 'atan':\n            return [tfc.atan(utils_1.getParamValue('x', node, tensorMap))];\n        case 'ceil':\n            return [tfc.ceil(utils_1.getParamValue('x', node, tensorMap))];\n        case 'cos':\n            return [tfc.cos(utils_1.getParamValue('x', node, tensorMap))];\n        case 'cosh':\n            return [tfc.cosh(utils_1.getParamValue('x', node, tensorMap))];\n        case 'elu':\n            return [tfc.elu(utils_1.getParamValue('x', node, tensorMap))];\n        case 'exp':\n            return [tfc.exp(utils_1.getParamValue('x', node, tensorMap))];\n        case 'floor':\n            return [tfc.floor(utils_1.getParamValue('x', node, tensorMap))];\n        case 'log':\n            return [tfc.log(utils_1.getParamValue('x', node, tensorMap))];\n        case 'relu':\n            return [tfc.relu(utils_1.getParamValue('x', node, tensorMap))];\n        case 'selu':\n            return [tfc.selu(utils_1.getParamValue('x', node, tensorMap))];\n        case 'sigmoid':\n            return [tfc.sigmoid(utils_1.getParamValue('x', node, tensorMap))];\n        case 'sin':\n            return [tfc.sin(utils_1.getParamValue('x', node, tensorMap))];\n        case 'sinh': {\n            return [tfc.sinh(utils_1.getParamValue('x', node, tensorMap))];\n        }\n        case 'sqrt': {\n            return [tfc.sqrt(utils_1.getParamValue('x', node, tensorMap))];\n        }\n        case 'square': {\n            return [tfc.square(utils_1.getParamValue('x', node, tensorMap))];\n        }\n        case 'tanh': {\n            return [tfc.tanh(utils_1.getParamValue('x', node, tensorMap))];\n        }\n        case 'tan':\n            return [tfc.tan(utils_1.getParamValue('x', node, tensorMap))];\n        case 'clipByValue':\n            return [tfc.clipByValue(utils_1.getParamValue('x', node, tensorMap), utils_1.getParamValue('clipValueMin', node, tensorMap), utils_1.getParamValue('clipValueMax', node, tensorMap))];\n        case 'rsqrt':\n            return [tfc.div(tfc.scalar(1.0, 'float32'), tfc.sqrt(utils_1.getTensor(node.inputNames[0], tensorMap)))];\n        default:\n            throw TypeError(\"Node type \" + node.op + \" is not implemented\");\n    }\n};\nexports.CATEGORY = 'basic_math';\n//# sourceMappingURL=basic_math_executor.js.map"},"lineCount":60}},"hash":"b2edfc8ad3aeb36aaaf1e39f28398276","cacheData":{"env":{}}}